import streamlit as st
from utils.db_functions import get_latest_allocations
from utils.risk_functions import calculate_portfolio_risk

# --- Verifica√ß√£o de Login ---
if "logged_in" not in st.session_state or not st.session_state["logged_in"]:
    st.error("Por favor, fa√ßa o login na p√°gina principal para acessar este conte√∫do.")
    st.stop()

# --- Configura√ß√£o da P√°gina ---
st.set_page_config(page_title="An√°lise de Risco", layout="wide")
st.title("üîé An√°lise de Risco dos Portf√≥lios")
st.markdown("---")

# --- Vari√°veis ---
PORTFOLIO_NAMES = ["Conservador", "Moderado", "Balanceado", "Crescimento", "Agressivo"]

# --- Corpo da P√°gina ---
selected_portfolio = st.selectbox(
    "Selecione um portf√≥lio para analisar:",
    PORTFOLIO_NAMES
)

if selected_portfolio:
    # Mostra um spinner enquanto os c√°lculos est√£o sendo feitos
    with st.spinner(f"Calculando m√©tricas de risco para o portf√≥lio '{selected_portfolio}'..."):
        # 1. Pega a aloca√ß√£o do banco de dados
        allocations_df = get_latest_allocations(selected_portfolio)

        if allocations_df.empty:
            st.warning(f"N√£o h√° dados de aloca√ß√£o para o portf√≥lio '{selected_portfolio}'.")
        else:
            # 2. Calcula as m√©tricas de risco
            risk_metrics, cumulative_returns = calculate_portfolio_risk(allocations_df)

            if risk_metrics:
                st.subheader(f"M√©tricas de Risco - {selected_portfolio}")
                
                # Exibe as m√©tricas em colunas
                col1, col2, col3 = st.columns(3)
                col1.metric(
                    label="Volatilidade Anualizada",
                    value=f"{risk_metrics['Volatilidade Anualizada']:.2%}"
                )
                col2.metric(
                    label="Sharpe Ratio",
                    value=f"{risk_metrics['Sharpe Ratio']:.2f}"
                )
                col3.metric(
                    label="VaR 95% (1 dia)",
                    value=f"{risk_metrics['VaR 95% (1 dia)']:.2%}",
                    help="Representa a perda m√°xima esperada em 1 dia, com 95% de confian√ßa, baseada em dados hist√≥ricos."
                )

                # Exibe o gr√°fico de retorno acumulado
                st.subheader("Retorno Acumulado Hist√≥rico (3 anos)")
                st.line_chart(cumulative_returns)
            else:
                st.error("N√£o foi poss√≠vel calcular as m√©tricas de risco. Verifique as aloca√ß√µes e o mapeamento de tickers.")
